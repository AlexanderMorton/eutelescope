##This is the GBL fitter with a strip sensor DUT. 
TGeo reads the thickness of the sensors from the sensitive area of the gear.
50 micron for mimosas, 300 micron for DUT
Test with 10k events which was enough for alignment

The gear file used from the beginiing is gear-beforeAlign-000703.xml.
This has the correct correlation but offsets are not taken into account.
The sequence of steering files to run to create initial tracks.
js => jobsub -c config/config -csv runlist/runlist
###js converter 703
###js clustering 703
###js hitmaker 703

Prealignment will produce a gear called: gear-beforeAlign-000703_pre.xml 
Note there is heavy misalignment in the last plane!!! 
Prealignment of this plane has been done but is not adviced. 

###js patternRecognition 703
Triplets are formed from hits on the three planes of each arm of the telescope. The three hits that form the triplet are just mini tracks which are extrapolated to a central point in the centre of the setup. This extrapolation is constant in incidence for non magnetic field runs. However incidence is a variable with curvature so this must be taken into account in that situation. See noDUTExample.

The three planes which create each triplet are first searched in the first and last plane of the three for matching hits from a track. If in the xy plane of the global frame they have a residual less than this (DoubletDistCut) cut then match the hits to form a doublet. 
Incidence and curvature is taken into account in the matching here and throughout
#DoubletDistCut = 1 1
Use the doublet to link hits on the central plane to itself.
#DoubletCenDistCut = 1 1
Create triplets from hits on each arm now.
Predicted position at central point and slope must agree with the cuts given:
#TripletConnectDistCut = 0.5 0.5
#TripletSlopeCuts = 0.01 0.01
These planes will not create a state. IMPORTANT:TO EXCLUDE A PLANE IN ALIGNMENT DO IT HERE. SO PASS TRACKS WITH NO PLANE 8 FOR INITIAL ATTEMPT WITHOUT DUT
#excludeplanes=  8  
Plane dimension is needed to determine in what directions we should compare track and DUT hit
#planeDimensions= 2 2 2 1 2 2 2 
This is used to determine the initial curvature of the track at plane 0
#InitialDisplacement=0

Running the above pattern recognition should give:

21:38:31 jobsub.patternRecognition(INFO): [ MESSAGE5 "TrackSearch"] Percentage tracks without DUT hit: 0.3724
The number of tracks reconstructed by mimosas but a a corresponding hit on the DUT is not found. 
Not cut is applied to a DUT hit. The same track can be associated to different DUT hits.
21:38:31 jobsub.patternRecognition(INFO): [ MESSAGE5 "TrackSearch"] Number of tracks per event: 0.688516
21:38:31 jobsub.patternRecognition(INFO): [ MESSAGE5 "TrackSearch"] Number of left arm triplets per event: 2.0683
The total number of three hits close enough to form a triplet on the arm up stream
21:38:31 jobsub.patternRecognition(INFO): [ MESSAGE5 "TrackSearch"] Number of right arm triplets per event: 1.95249
Same but for down stream

Without running iterAlign we can find the correct alignment parameters
This process is similar to Daffitter and definition of parameters will be given below 

Alignment is done using GBL tracks and millepede. 
Millepede will try to find the minimum chi2 for a series of independent residuals. These residuals compose each measured hit and predicted track position. This is in the measurement frame, i.e the plane which the position of the hit and prediction would sit on the physical plane. This residual will change due to two different types of parameters:
 The local parameters: the parameters which describe the most likely track (Kink, incidence position). This is just changing the track we predicted.
 The global parameters: The position of the detector. You can think of this as keeping the track constant now and moving the detector planes.

 We are interest in the second type of parameter since we what to know the position of the detector. Therefore the first are taken as nuissance parameters and only the global is determined. This is done like any other way, with least squares fit, since the problem is just minimising a chi2 distribution. The only difference is the linear algebra which makes the process efficient. 

The planes which you can move while keeping the tracks produced const are:

#FixXshifts=0  5  
#FixYshifts=0  5  
#FixZshifts=0 1 2 3 4 5 8 
#FixXrot=   0 1 2 3 4 5 8
#FixYrot=   0 1 2 3 4 5 8
#FixZrot=   0   5 

The first and last plane must be fixed at this point in alignment. Prealignment has moved this plane to possibly ~0.5 mm precision. 
The input errors relate to the uncertainty we should expect the gaussian distributions of each residual to have AFTER the fit. 
Therefore if you can not align with errors close to that of the DUT then there must be a systematic error remaining afterwards.
Otherwise the initial track descripition was so wrong that no solution can be found.

Alignment from prealignment can be found setting the 

#r = 0.05
#dutX=0.05
#dutY=100000000


final gear: alignedGear-xyzShift-xyzRot-run000703.xml

r = 0.05
dutX=0.05
dutY=100000000



pede          = chiscut 1000  100

